@model List<BridgeModel>

<h1>Prochaine fermeture : </h1>


@{string finaldate = "2021-09-15T14:19:00+0200";}
@foreach (var bridge in Model)
{
    var date1 = Convert.ToDateTime(DateTime.Now.ToString());
    var date2 = Convert.ToDateTime(@bridge.closing_date);

    //var test = date1.Subtract(date2);
    int result = DateTime.Compare(date2, date1);

    if (result == 1)
    {
        var date3 = Convert.ToDateTime(finaldate);
        int new_result = DateTime.Compare(date3, date2);

        if (new_result == 1)
        {
            finaldate = @bridge.closing_date.ToString();
        }
    }
}

@foreach (var bridge in Model)
{
    if (@bridge.closing_date.ToString() == finaldate)
    {
        TimeSpan test = Convert.ToDateTime(@bridge.reopening_date) - Convert.ToDateTime(@bridge.closing_date);
        <p>@bridge.closing_date @bridge.closing_date.DayOfWeek</p>
        <h2>Prochaine réouverture : </h2>
        <p>@bridge.reopening_date @bridge.reopening_date.DayOfWeek</p>
        <h2>Nom du bateau / Évenement ayant causé la fermeture : </h2>
        <p>@bridge.boat_name</p>
        <h2>Durée de la fermeture : </h2>
        <p>@test.TotalHours heures</p>
        int h = Convert.ToDateTime(@bridge.closing_date).Hour;
        int duree = int.Parse(test.Minutes.ToString());
        List<int> tab = new List<int>();

        for (int i = 0; i < duree; i++)
        {
            tab.Add(i);
        }

        <h2>Risque de bouchons : </h2>
        if (tab.Contains(7) || tab.Contains(8) || tab.Contains(9) || tab.Contains(17) || tab.Contains(18) || tab.Contains(19))
        {
            <p>Elevé</p>
        }
        else
        {
            <p>Faible</p>
        }
    }
}



